
Cd(Here);;

#include "Scripts/MapListing"
#include "Scripts/RegRelated"
#include "Scripts/JoinMapSelector"
#include "Pages/Game/Draw/AniGameMainMenu"

I64 mc_input_char[MAX_MAP_STR_LEN];

U0 DrawMapCreator(CTask *task,CDC *dc)
{
  I64 i;
  dc->color=BLACK;
  GrRect(dc,0,0,GR_WIDTH,GR_HEIGHT);
  DrawAnimation(task,dc,CENTER_LENGTH,CENTER_HEIGHT);//RandNum(-1,0),RandNum(-1,0));
  dc->color=WHITE;
  GrPrint(dc,0,0,"%s",game_title);
  GrPrint(dc,0,16,"Map Creator");
  dc->color=LTCYAN;
  switch (map_slot_action) {
    case 1:
      GrPrint(dc,0,32,"
*[ENTER]: 	Create Map
*[SHIFT_ESC]: 	Abort");
      break;
    case 3:
      GrPrint(dc,0,32,"
*[ENTER]: 	Rename Map
*[SHIFT_ESC]: 	Abort");
      break;
  }
  dc->color=LTGREEN;
  GrPrint(dc,0,72,"Enter Project Name:[                ]");
  dc->color=WHITE;
  for (i=0;i<MAX_MAP_STR_LEN;i++) {
    GrPrint(dc,8*20+i*8,72,"%c",mc_input_char[i]);    
  }
}

U8 *new_map_name="";

Bool MapSlotAct(I64 map_slot,I64 action)
{
  U8 *map_name="",*map_name_dir="";
  I64 i,map_id=0;
  for (i=0;i<MAX_MAP_STR_LEN;i++) {
    if (mc_input_char[i]!=0) {
      map_name=MStrPrint("%s%c",map_name,mc_input_char[i]);
    }
  }
  switch (action) {
    case 1://create
      RegWrite(MStrPrint("TempleOS/Insecticide/Saves/SavesNames/slot_%d",map_slot),
	       MStrPrint("U8 *slot_map_name=\"%s\";\n",map_name));
      break;
    case 3://rename
      RegWrite(MStrPrint("TempleOS/Insecticide/Saves/SavesNames/slot_%d",map_slot),
	       MStrPrint("U8 *slot_map_name=\"%s\";\n",map_name));
      break;
  }
  return TRUE;
}

Bool is_typing=FALSE;
I64 cd=0;
U0 AnimateMSTyper() 
{
  I64 key,sc;
  while (is_typing) {
    key=KeyGet(&sc);
    if ((key=='_' || key==137 || 48<=key<=57 || 65<=key<=90 || 97<=key<=122) && cd<MAX_MAP_STR_LEN) {
      mc_input_char[cd]=key;
      cd++;
    } else if (key==CH_BACKSPACE) {
      mc_input_char[cd]=0;
      if (cd>0) {
        cd--;
        mc_input_char[cd]=0;
      } 
    } else if (key=='\n' || key==CH_ESC || key==CH_SHIFT_ESC) {
      is_typing=FALSE;
    }
    Sleep(1);
  }
}

U0 MSTyperInit(U8 *old_map_name)
{
  I64 i,cnt=GetTextSizeNormal(old_map_name,MAX_MAP_STR_LEN);
  for (i=0;i<MAX_MAP_STR_LEN;i++) {
    mc_input_char[i]=0;
  }
  for (i=0;i<cnt;i++) {
    if (i<MAX_MAP_STR_LEN) {
     mc_input_char[i]=old_map_name[i];
    }
  }
  if (cnt>MAX_MAP_STR_LEN) {
    cnt=MAX_MAP_STR_LEN;
  }
  cd=cnt;
}


U0 BugGameMapCreate()
{
  I64 arg1,arg2;
  CTask *animate_menu;
  SettingsPush;
  AutoComplete;
  WinBorder;
  WinMax;
  DocCursor;
  DocClear;
  GrPaletteSet(gr32_palette_std);
  MSTyperInit(LOADED_MAP_NAME);
  Fs->draw_it=&DrawMapCreator;
  animate_menu=Fs->animate_task=Spawn(&AnimateMenu,NULL,"Task",,Fs);
  try {
    while (TRUE) {
      is_typing=TRUE;
      AnimateMSTyper;
      switch(MessageGet(&arg1,&arg2,1<<MESSAGE_KEY_DOWN+1<<MESSAGE_KEY_UP)) { 
	case MESSAGE_KEY_UP:
	  switch (arg1) {
	    case '\n':
	    case CH_ESC:
	    case CH_SHIFT_ESC:
              if (((arg1=='\n' || arg1==CH_ESC) && cd>0 &&
                   MapSlotAct(LOADED_MAP_ID,map_slot_action)
                  ) ||
                  arg1==CH_SHIFT_ESC
		 ) { //create new map
		JoinMapSelector(Here,animation_menu_sec,LOADED_MAP_ID,mse_type,-1);
	        Kill(animate_menu);
	        Exit;
	      }
	      break;
	  }
	  break;
      }
    }  
exit_map_creator:
  } catch
    PutExcept;
  SettingsPop;
  MenuPop;
}

BugGameMapCreate;